{"version":3,"sources":["controllers/VisualController/index.tsx","controllers/controller.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["config","volumeChangedLight","timeout","waitTime","threshold","avarageLight","maxLight","avarageLong","lights","name","type","lightStates","lightTypeStatus","lastUpdates","Date","now","timeouts","avarageLightTotalArray","avarageLongLightTotalArray","VisualController","analyser","running","canvasRefBar","useRef","useState","canvasCtxBar","setCanvasCtxBar","drawVisualBar","setDrawVisualBar","canvasRefTotal","canvasCtxTotal","setCanvasCtxTotal","drawVisualTotal","setDrawVisualTotal","React","updateState","forceUpdate","useCallback","useEffect","current","getContext","console","log","lightConf","switchLight","lightType","on","_now","clearTimeout","setTimeout","Object","keys","forEach","key","bufferLength","frequencyBinCount","dataArray","Uint8Array","WIDTH","width","HEIGHT","height","clearRect","draw","setDrawVisual_","requestAnimationFrame","getByteFrequencyData","fillStyle","fillRect","barHeight","barWidth","x","i","visualizeBar","firstTime","_totalAv","reduce","accumulator","curr","length","_last50totalAv","slice","_last50totalAv_av","_last500totalAv","_last500totalAv_av","_avX3","push","_max","_last50Without0Av","_last50Without0Av_av","_countAVWithout0","filter","e","_avWithout0","visiualizeTotal","window","cancelAnimationFrame","WIDTH1","HEIGHT1","stop","Box","alignSelf","pad","justify","gap","direction","border","color","size","round","elevation","ref","margin","RadialSelected","opacity","entries","map","value","align","Heading","level","onClick","lightName","lightCurrentState","Controller","audioCtx","setAudioCtx","audioInput","setAudioInput","setAnalyser","setRunning","stream","setStream","undefined","navigator","mediaDevices","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Promise","resolve","reject","call","Error","_audioCtx","AudioContext","webkitAudioContext","setupMic","a","analyser_","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","distortion","createWaveShaper","gainNode","createGain","biquadFilter","createBiquadFilter","convolver","createConvolver","audio","video","stream_","audioInput_","createMediaStreamSource","connect","gain","setTargetAtTime","currentTime","disconnect","frequency","start","background","Header","corner","side","Main","Button","getAudioTracks","track","label","App","Grommet","theme","grommet","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.f9d40f81.chunk.js","sourcesContent":["import React, { FC, useEffect, useRef, useState } from 'react';\nimport { Box, Button, Heading } from 'grommet';\nimport { RadialSelected } from 'grommet-icons';\n\nexport interface I_VisualController_Props {\n\tanalyser: AnalyserNode | null;\n\trunning: boolean;\n}\n\nconst config: Record<string, any> = {\n\tvolumeChangedLight: {\n\t\ttimeout: 0, // timeout wait to switch off --> 0 no switch off\n\t\twaitTime: 300, // wait till next change in ms\n\t\tthreshold: 0, // threshold if 0 no threshold\n\t},\n\tavarageLight: {\n\t\ttimeout: 100,\n\t\twaitTime: 300,\n\t\tthreshold: 1.2,\n\t},\n\tmaxLight: {\n\t\ttimeout: 1000,\n\t\twaitTime: 300,\n\t\tthreshold: 1.8,\n\t},\n\tavarageLong: {\n\t\ttimeout: 5000,\n\t\twaitTime: 300,\n\t\tthreshold: 1.6,\n\t},\n\n\tlights: [\n\t\t{ name: 'light1', type: 'volumeChangedLight' },\n\t\t{ name: 'light2', type: 'avarageLight' },\n\t\t{ name: 'light3', type: 'maxLight' },\n\t\t{ name: 'light4', type: 'avarageLong' },\n\t],\n};\n\nconst lightStates: Record<string, boolean> = {};\nconst lightTypeStatus: Record<string, boolean> = {\n\tvolumeChangedLight: false,\n\tavarageLight: false,\n\tmaxLight: false,\n\tavarageLong: false,\n};\n\nconst lastUpdates: Record<string, number> = {\n\tvolumeChangedLight: Date.now(),\n\tavarageLight: Date.now(),\n\tmaxLight: Date.now(),\n\tavarageLong: Date.now(),\n};\n\nconst timeouts: Record<string, any> = {\n\tvolumeChangedLight: null,\n\tavarageLight: null,\n\tmaxLight: null,\n\tavarageLong: null,\n};\n\nconst avarageLightTotalArray: number[] = [];\nconst avarageLongLightTotalArray: number[] = [];\n\nconst VisualController: FC<I_VisualController_Props> = ({ analyser, running }: I_VisualController_Props) => {\n\tconst canvasRefBar = useRef<any>();\n\tconst [canvasCtxBar, setCanvasCtxBar] = useState<any>(null);\n\tconst [drawVisualBar, setDrawVisualBar] = useState<number>(0);\n\n\tconst canvasRefTotal = useRef<any>();\n\tconst [canvasCtxTotal, setCanvasCtxTotal] = useState<any>(null);\n\tconst [drawVisualTotal, setDrawVisualTotal] = useState<number>(0);\n\n\t// to force render\n\tconst [, updateState] = React.useState();\n\tconst forceUpdate = React.useCallback(() => updateState({} as any), []);\n\n\tuseEffect(() => {\n\t\tsetCanvasCtxBar(canvasRefBar.current.getContext('2d'));\n\t\tsetCanvasCtxTotal(canvasRefTotal.current.getContext('2d'));\n\n\t\tconsole.log('useEffect');\n\t\tfor (const lightConf of config.lights) {\n\t\t\tlightStates[lightConf.name] = false;\n\t\t\t// TODO => switch real light to on/off\n\t\t}\n\t}, []);\n\n\tconst switchLight = (lightType: string, on: boolean) => {\n\t\tconst _now = Date.now();\n\t\tif (_now - lastUpdates[lightType] >= config[lightType].waitTime && lightTypeStatus[lightType] !== on) {\n\t\t\tclearTimeout(timeouts[lightType]);\n\t\t\tlastUpdates[lightType] = _now;\n\n\t\t\tlightTypeStatus[lightType] = on;\n\n\t\t\t// TODO => switch real light to on/off\n\t\t\tfor (const lightConf of config.lights) {\n\t\t\t\tif (lightConf.type === lightType) {\n\t\t\t\t\tlightStates[lightConf.name] = on;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (config[lightType].timeout !== 0) {\n\t\t\t\ttimeouts[lightType] = setTimeout(() => {\n\t\t\t\t\tlightTypeStatus[lightType] = false;\n\n\t\t\t\t\t// TODO => switch real light to off\n\t\t\t\t\tfor (const lightConf of config.lights) {\n\t\t\t\t\t\tif (lightConf.type === lightType) {\n\t\t\t\t\t\t\tlightStates[lightConf.name] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, config[lightType].timeout);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst visiualizeTotal = (bufferLength: number, dataArray: Uint8Array) => {\n\t\tconst WIDTH = canvasRefTotal.current.width;\n\t\tconst HEIGHT = canvasRefTotal.current.height;\n\n\t\tif (!running || !analyser) return;\n\n\t\tcanvasCtxTotal.clearRect(0, 0, WIDTH, HEIGHT);\n\n\t\tlet firstTime = true;\n\n\t\tconst draw = () => {\n\t\t\tif (!running || !analyser) return;\n\t\t\tanalyser.getByteFrequencyData(dataArray);\n\t\t\tconst setDrawVisual_ = requestAnimationFrame(draw);\n\t\t\tsetDrawVisualTotal(setDrawVisual_);\n\t\t\tcanvasCtxTotal.fillStyle = 'rgb(51, 51, 51)';\n\t\t\tcanvasCtxTotal.fillRect(0, 0, WIDTH, HEIGHT);\n\t\t\t// const barWidth = (WIDTH / bufferLength) * 2.5;\n\t\t\tconst barWidth = WIDTH / 10;\n\n\t\t\t// total avarage (volumeChanged)\n\t\t\tconst _totalAv =\n\t\t\t\tavarageLightTotalArray.reduce((accumulator, curr) => accumulator + curr, 0) /\n\t\t\t\tavarageLightTotalArray.length;\n\t\t\tconst _last50totalAv = avarageLightTotalArray.slice(avarageLightTotalArray.length < -64 ? -1 : -6);\n\t\t\tconst _last50totalAv_av =\n\t\t\t\t_last50totalAv.reduce((accumulator, curr) => accumulator + curr, 0) / _last50totalAv.length;\n\t\t\tcanvasCtxTotal.fillStyle = 'rgb(' + (_totalAv + 100) + ',200,200)';\n\t\t\tcanvasCtxTotal.fillRect(\n\t\t\t\t((WIDTH + 6) / 5 - barWidth / 2) * 1,\n\t\t\t\tHEIGHT - _totalAv / 2,\n\t\t\t\tbarWidth,\n\t\t\t\t_totalAv / 2,\n\t\t\t);\n\n\t\t\t// volume getting up\n\t\t\tif (_totalAv < _last50totalAv_av) {\n\t\t\t\tswitchLight('volumeChangedLight', true);\n\t\t\t}\n\t\t\t// volume getting down\n\t\t\tif (_totalAv > _last50totalAv_av) {\n\t\t\t\tswitchLight('volumeChangedLight', false);\n\t\t\t}\n\n\t\t\t//avarage * 3 (avarage)\n\t\t\tconst _last500totalAv = avarageLightTotalArray.slice(avarageLightTotalArray.length < -30 ? -1 : -30);\n\t\t\tconst _last500totalAv_av =\n\t\t\t\t_last500totalAv.reduce((accumulator, curr) => accumulator + curr, 0) / _last500totalAv.length;\n\t\t\tconst _avX3 = (dataArray.reduce((accumulator, curr) => accumulator + curr, 0) / bufferLength) * 3;\n\t\t\tcanvasCtxTotal.fillStyle = 'rgb(' + (_avX3 + 100) + ',200,200)';\n\t\t\tcanvasCtxTotal.fillRect(((WIDTH + 6) / 5 - barWidth / 2) * 2, HEIGHT - _avX3 / 2, barWidth, _avX3 / 2);\n\t\t\tif (_avX3 > _last500totalAv_av * config['avarageLight'].threshold) {\n\t\t\t\tswitchLight('avarageLight', true);\n\t\t\t}\n\t\t\tavarageLightTotalArray.push(_avX3);\n\n\t\t\t// max (max)\n\t\t\tconst _max = dataArray.reduce((accumulator, curr) => (accumulator < curr ? curr : accumulator), 0);\n\t\t\tcanvasCtxTotal.fillStyle = 'rgb(' + (_max + 100) + ',200,200)';\n\t\t\tcanvasCtxTotal.fillRect(((WIDTH + 6) / 5 - barWidth / 2) * 3, HEIGHT - _max / 2, barWidth, _max / 2);\n\t\t\tif (_max > _last500totalAv_av * config['maxLight'].threshold) {\n\t\t\t\tswitchLight('maxLight', true);\n\t\t\t}\n\n\t\t\t//avarage without 0 (avarageLong)\n\t\t\tconst _last50Without0Av = avarageLongLightTotalArray.slice(\n\t\t\t\tavarageLongLightTotalArray.length < -100 ? -1 : -100,\n\t\t\t);\n\t\t\tconst _last50Without0Av_av =\n\t\t\t\t_last50Without0Av.reduce((accumulator, curr) => accumulator + curr, 0) / _last50Without0Av.length;\n\t\t\tconst _countAVWithout0 = dataArray.filter((e) => e !== 0).length;\n\t\t\tconst _avWithout0 = dataArray.reduce((accumulator, curr) => accumulator + curr, 0) / _countAVWithout0;\n\t\t\tcanvasCtxTotal.fillStyle = 'rgb(' + (_avWithout0 + 100) + ',200,200)';\n\t\t\tcanvasCtxTotal.fillRect(\n\t\t\t\t((WIDTH + 6) / 5 - barWidth / 2) * 4,\n\t\t\t\tHEIGHT - _avWithout0 / 2,\n\t\t\t\tbarWidth,\n\t\t\t\t_avWithout0 / 2,\n\t\t\t);\n\t\t\tif (_avWithout0 > _last50Without0Av_av * config['avarageLong'].threshold) {\n\t\t\t\tswitchLight('avarageLong', true);\n\t\t\t}\n\t\t\tavarageLongLightTotalArray.push(_avWithout0);\n\n\t\t\tif (firstTime) console.log(dataArray);\n\t\t\tfirstTime = false;\n\t\t};\n\t\tdraw();\n\t};\n\n\tconst visualizeBar = (bufferLength: number, dataArray: Uint8Array) => {\n\t\tconst WIDTH = canvasRefBar.current.width;\n\t\tconst HEIGHT = canvasRefBar.current.height;\n\n\t\tif (!running || !analyser) return;\n\n\t\tconsole.log(bufferLength);\n\n\t\tcanvasCtxBar.clearRect(0, 0, WIDTH, HEIGHT);\n\n\t\t//reference this using self\n\t\tconst draw = () => {\n\t\t\tif (!running || !analyser) return;\n\t\t\tconst setDrawVisual_ = requestAnimationFrame(draw);\n\t\t\tsetDrawVisualBar(setDrawVisual_);\n\t\t\tanalyser.getByteFrequencyData(dataArray);\n\t\t\tcanvasCtxBar.fillStyle = 'rgb(51, 51, 51)';\n\t\t\tcanvasCtxBar.fillRect(0, 0, WIDTH, HEIGHT);\n\t\t\t// const barWidth = (WIDTH / bufferLength) * 2.5;\n\t\t\tconst barWidth = WIDTH / (bufferLength + 0.7);\n\t\t\tlet barHeight;\n\t\t\tlet x = 0;\n\t\t\tfor (let i = 0; i < bufferLength; i++) {\n\t\t\t\tbarHeight = dataArray[i];\n\t\t\t\tcanvasCtxBar.fillStyle = 'rgb(' + (barHeight + 100) + ',50,50)';\n\t\t\t\tcanvasCtxBar.fillRect(x, HEIGHT - barHeight / 2, barWidth, barHeight / 2);\n\t\t\t\tx += barWidth + 1;\n\t\t\t}\n\t\t};\n\n\t\tdraw();\n\t};\n\n\tconst stop = () => {\n\t\tif (canvasCtxBar) {\n\t\t\twindow.cancelAnimationFrame(drawVisualBar);\n\t\t\tconst WIDTH = canvasRefBar.current.width;\n\t\t\tconst HEIGHT = canvasRefBar.current.height;\n\t\t\tcanvasCtxBar.fillStyle = '#7D4CDB';\n\t\t\tcanvasCtxBar.fillRect(0, 0, WIDTH, HEIGHT);\n\t\t}\n\t\tif (canvasCtxTotal) {\n\t\t\twindow.cancelAnimationFrame(drawVisualTotal);\n\t\t\tconst WIDTH1 = canvasRefTotal.current.width;\n\t\t\tconst HEIGHT1 = canvasRefTotal.current.height;\n\t\t\tcanvasCtxTotal.fillStyle = '#7D4CDB';\n\t\t\tcanvasCtxTotal.fillRect(0, 0, WIDTH1, HEIGHT1);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (running && analyser) {\n\t\t\tObject.keys(lightStates).forEach((key) => {\n\t\t\t\tlightStates[key] = false;\n\t\t\t});\n\t\t\tconst bufferLength = analyser.frequencyBinCount;\n\t\t\tconst dataArray = new Uint8Array(bufferLength);\n\t\t\tvisualizeBar(bufferLength, dataArray);\n\t\t\tvisiualizeTotal(bufferLength, dataArray);\n\t\t} else {\n\t\t\tstop();\n\t\t}\n\t}, [running]);\n\n\tconst switchLightState = (lightName: string, lightCurrentState: boolean) => {\n\t\tif (running) {\n\t\t\tconsole.log('only if animation is off');\n\t\t\treturn;\n\t\t}\n\n\t\tlightStates[lightName] = !lightCurrentState;\n\t\tconsole.log(lightStates, lightName, !lightCurrentState);\n\t\tforceUpdate();\n\t\t// TODO => switch real light to on/off\n\t};\n\n\treturn (\n\t\t<Box alignSelf=\"center\" pad=\"small\" justify=\"center\" gap=\"medium\">\n\t\t\t<Box direction=\"row\" gap=\"small\" justify=\"center\">\n\t\t\t\t<Box\n\t\t\t\t\tpad=\"xsmall\"\n\t\t\t\t\talignSelf=\"center\"\n\t\t\t\t\tborder={{ color: 'dark-2', size: 'medium' }}\n\t\t\t\t\tround=\"medium\"\n\t\t\t\t\televation=\"small\"\n\t\t\t\t>\n\t\t\t\t\t<Box alignSelf=\"center\">Bar</Box>\n\t\t\t\t\t<canvas width=\"300\" height=\"100\" ref={canvasRefBar}></canvas>\n\t\t\t\t\t<Box direction=\"row\" justify=\"around\" margin=\"small\">\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<RadialSelected color=\"brand\" size=\"small\" opacity=\"0\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t<Box\n\t\t\t\t\tpad=\"xsmall\"\n\t\t\t\t\talignSelf=\"center\"\n\t\t\t\t\tborder={{ color: 'dark-2', size: 'medium' }}\n\t\t\t\t\tround=\"medium\"\n\t\t\t\t\televation=\"small\"\n\t\t\t\t>\n\t\t\t\t\t<Box alignSelf=\"center\">Total</Box>\n\t\t\t\t\t<canvas width=\"50\" height=\"100\" ref={canvasRefTotal}></canvas>\n\t\t\t\t\t<Box direction=\"row\" justify=\"around\" margin=\"small\">\n\t\t\t\t\t\t{Object.entries(lightTypeStatus).map(([key, value]) => (\n\t\t\t\t\t\t\t<Box key={'lightTypeStatus_' + key}>\n\t\t\t\t\t\t\t\t<RadialSelected color={value ? 'status-warning' : 'status-disabled'} size=\"small\" />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Box pad=\"xsmall\" alignSelf=\"center\">\n\t\t\t\t<Box direction=\"row\" justify=\"around\" margin=\"small\">\n\t\t\t\t\t{Object.entries(config.lights).map(([key, value]) => (\n\t\t\t\t\t\t<Box key={`lights-${key}`} pad=\"small\" margin=\"small\" align=\"center\" gap=\"small\">\n\t\t\t\t\t\t\t<Heading level=\"5\" margin=\"none\">\n\t\t\t\t\t\t\t\t{(value as any).name}\n\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t<RadialSelected\n\t\t\t\t\t\t\t\tcolor={lightStates[(value as any).name] ? 'status-warning' : 'status-disabled'}\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tonClick={() => switchLightState((value as any).name, lightStates[(value as any).name])}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t))}\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default VisualController;\n","import { Box, Button, Header, Main, Heading } from 'grommet';\nimport React, { FC, useEffect, useState } from 'react';\nimport VisualController from './VisualController';\n\nconst Controller: FC<any> = () => {\n\tconst [audioCtx, setAudioCtx] = useState<AudioContext | null>(null);\n\tconst [audioInput, setAudioInput] = useState<MediaStreamAudioSourceNode | null>(null);\n\tconst [analyser, setAnalyser] = useState<AnalyserNode | null>(null);\n\tconst [running, setRunning] = useState<boolean>(false);\n\tconst [stream, setStream] = useState<MediaStream | null>(null);\n\n\tuseEffect(() => {\n\t\t// Some browsers partially implement mediaDevices. We can't just assign an object\n\t\t// with getUserMedia as it would overwrite existing properties.\n\t\t// Here, we will just add the getUserMedia property if it's missing.\n\t\tif (navigator.mediaDevices.getUserMedia === undefined) {\n\t\t\tnavigator.mediaDevices.getUserMedia = function (constraints) {\n\t\t\t\t// First get ahold of the legacy getUserMedia, if present\n\t\t\t\tconst getUserMedia =\n\t\t\t\t\t(navigator as any).webkitGetUserMedia ||\n\t\t\t\t\t(navigator as any).mozGetUserMedia ||\n\t\t\t\t\t(navigator as any).msGetUserMedia;\n\n\t\t\t\t// Some browsers just don't implement it - return a rejected promise with an error\n\t\t\t\t// to keep a consistent interface\n\t\t\t\tif (!getUserMedia) {\n\t\t\t\t\treturn Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tgetUserMedia.call(navigator, constraints, resolve, reject);\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\t// (navigator as any).getUserMedia =\n\t\t// \t(navigator as any).getUserMedia ||\n\t\t// \t(navigator as any).webkitGetUserMedia ||\n\t\t// \t(navigator as any).mozGetUserMedia;\n\n\t\tconst _audioCtx: AudioContext = new window.AudioContext() || (window as any).webkitAudioContext;\n\t\tsetAudioCtx(_audioCtx);\n\t}, []);\n\n\tconst setupMic = async () => {\n\t\tif (audioCtx === null) return;\n\t\ttry {\n\t\t\tconst analyser_ = audioCtx.createAnalyser();\n\t\t\tanalyser_.minDecibels = -90;\n\t\t\tanalyser_.maxDecibels = -10;\n\t\t\tanalyser_.smoothingTimeConstant = 0.85;\n\t\t\t// analyser_.fftSize = 256;\n\t\t\tanalyser_.fftSize = 64;\n\t\t\tsetAnalyser(analyser_);\n\n\t\t\tconst distortion = audioCtx.createWaveShaper();\n\t\t\tconst gainNode = audioCtx.createGain();\n\t\t\tconst biquadFilter = audioCtx.createBiquadFilter();\n\t\t\tconst convolver = audioCtx.createConvolver();\n\n\t\t\tlet stream_: MediaStream;\n\t\t\t(window as any).stream = stream_ = await navigator.mediaDevices.getUserMedia({ audio: true, video: false });\n\t\t\tconst audioInput_ = audioCtx.createMediaStreamSource(stream_);\n\t\t\tsetStream(stream_);\n\n\t\t\taudioInput_.connect(distortion);\n\t\t\tdistortion.connect(biquadFilter);\n\t\t\tbiquadFilter.connect(gainNode);\n\t\t\tconvolver.connect(gainNode);\n\t\t\tgainNode.connect(analyser_);\n\n\t\t\tsetAudioInput(audioInput_);\n\n\t\t\t// distortion.oversample = '2x';\n\t\t\tbiquadFilter.gain.setTargetAtTime(0, audioCtx.currentTime, 0);\n\t\t\tbiquadFilter.disconnect(0);\n\t\t\tbiquadFilter.connect(gainNode);\n\n\t\t\tbiquadFilter.type = 'lowshelf';\n\t\t\tbiquadFilter.frequency.setTargetAtTime(1000, audioCtx.currentTime, 0);\n\t\t\t// biquadFilter.gain.setTargetAtTime(25, audioCtx.currentTime, 0);\n\n\t\t\tsetRunning(true);\n\t\t} catch (err) {\n\t\t\t//TODO: error getting stream\n\t\t\tconsole.log('Error: Issue getting mic', err);\n\t\t}\n\t};\n\n\tconst start = async () => {\n\t\tawait setupMic();\n\t};\n\n\tconst closeMic = () => {\n\t\tsetRunning(false);\n\t\tif (analyser) {\n\t\t\tanalyser.disconnect(0);\n\t\t\tsetAnalyser(null);\n\t\t}\n\t\tif (audioInput) {\n\t\t\taudioInput.disconnect(0);\n\t\t\tsetAudioInput(null);\n\t\t}\n\t\tif (stream) {\n\t\t\tstream.getAudioTracks().forEach((track: any) => {\n\t\t\t\ttrack.stop();\n\t\t\t});\n\t\t\tsetStream(null);\n\t\t}\n\t};\n\n\tconst stop = () => {\n\t\tcloseMic();\n\t};\n\n\treturn (\n\t\t<Box\n\t\t\tjustify=\"center\"\n\t\t\talignSelf=\"center\"\n\t\t\tmargin=\"small\"\n\t\t\tborder={{ color: 'brand', size: 'small' }}\n\t\t\tround=\"large\"\n\t\t\tbackground=\"dark-1\"\n\t\t>\n\t\t\t<Header justify=\"center\" height=\"xxsmall\" background=\"light-6\" round={{ corner: 'top', size: 'large' }}>\n\t\t\t\t<Heading level=\"2\" margin=\"none\">\n\t\t\t\t\tLightshow with Shellys V0.0.3\n\t\t\t\t</Heading>\n\t\t\t</Header>\n\t\t\t<Box border={[{ color: 'brand', size: 'small', side: 'bottom' }]} />\n\t\t\t<Main alignSelf=\"center\" pad=\"small\" justify=\"center\">\n\t\t\t\t<Box direction=\"row\" justify=\"center\" gap=\"medium\" margin=\"small\">\n\t\t\t\t\t{!running ? <Button onClick={start} label=\"Start\" /> : <Button onClick={stop} label=\"Stop\" />}\n\t\t\t\t</Box>\n\n\t\t\t\t<VisualController running={running} analyser={analyser} />\n\t\t\t</Main>\n\t\t</Box>\n\t);\n};\n\nexport default Controller;\n","import { grommet, Grommet } from 'grommet';\nimport React from 'react';\nimport './App.css';\nimport Controller from './controllers/controller';\n\nconst App = (): JSX.Element => {\n\treturn (\n\t\t<>\n\t\t\t<Grommet theme={grommet}>\n\t\t\t\t<Controller />\n\t\t\t</Grommet>\n\t\t</>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}