{"version":3,"sources":["db/index.ts","lighthandler/shelly1Handler.ts","controllers/VisualController/index.tsx","controllers/controller.tsx","configuration/NewEditLight.tsx","configuration/LightListElement.tsx","configuration/LightList.tsx","configuration/config.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["L_ShellyTypes_List","L_LightTypes_List","db","lights","version","stores","Dexie","switchShelly","light","turn","timeout","toString","axios","get","ip","channelID","then","response","catch","error","config","volumeChangedLight","waitTime","threshold","avarageLight","maxLight","avarageLong","lightStates","lightTypeStatus","reduce","a","v","lastUpdates","Date","now","timeouts","avarageLightTotalArray","avarageLongLightTotalArray","VisualController","analyser","running","canvasRefBar","useRef","useState","canvasCtxBar","setCanvasCtxBar","drawVisualBar","setDrawVisualBar","canvasRefTotal","canvasCtxTotal","setCanvasCtxTotal","drawVisualTotal","setDrawVisualTotal","React","updateState","forceUpdate","useCallback","useLiveQuery","toArray","useEffect","current","getContext","console","log","lightConf","name","switchLight","lightType","on","_now","clearTimeout","setTimeout","Object","keys","forEach","key","bufferLength","frequencyBinCount","dataArray","Uint8Array","WIDTH","width","HEIGHT","height","clearRect","draw","setDrawVisual_","requestAnimationFrame","getByteFrequencyData","fillStyle","fillRect","barHeight","barWidth","x","i","visualizeBar","firstTime","_totalAv","accumulator","curr","length","_last50totalAv","slice","_last50totalAv_av","_last500totalAv","_last500totalAv_av","_avX3","push","_max","_last50Without0Av","_last50Without0Av_av","_countAVWithout0","filter","e","_avWithout0","visiualizeTotal","window","cancelAnimationFrame","WIDTH1","HEIGHT1","stop","Box","alignSelf","pad","justify","gap","direction","border","color","size","round","ref","margin","RadialSelected","opacity","entries","map","value","align","Heading","level","onClick","lightName","lightCurrentState","_light","find","switchLightState","Controller","audioCtx","setAudioCtx","audioInput","setAudioInput","setAnalyser","setRunning","stream","setStream","undefined","navigator","mediaDevices","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","Promise","resolve","reject","call","Error","_audioCtx","AudioContext","webkitAudioContext","setupMic","analyser_","createAnalyser","minDecibels","maxDecibels","smoothingTimeConstant","fftSize","distortion","createWaveShaper","gainNode","createGain","biquadFilter","createBiquadFilter","convolver","createConvolver","audio","video","stream_","audioInput_","createMediaStreamSource","connect","gain","setTargetAtTime","currentTime","disconnect","type","frequency","start","Button","getAudioTracks","track","label","NewEditLight","method","toEditLight","onClose","setLightName","lightIP","setLightIP","shellyType","setShellyType","setlightType","setChannelID","title","setTitle","saveAdd","test","add","id","put","alert","side","wrap","TextInput","placeholder","plain","onChange","event","target","Select","options","option","parseInt","overflow","background","icon","Add","Save","hoverIndicator","LigthListElement","onEditLight","onRemoveLight","right","Edit","Trash","LightList","Configuration","setClose","isEdit","setIsEdit","selectedLight","setSelectedLight","Header","horizontal","corner","Main","delete","className","transaction","tables","all","table","clear","App","showConfig","setShowConfig","Grommet","theme","grommet","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5498be82.chunk.js","sourcesContent":["import Dexie, { Table } from 'dexie';\n\nexport const L_ShellyTypes_List = ['shelly1', 'shelly2.5', 'shelly1PM'];\nexport type T_ShellyTypes = typeof L_ShellyTypes_List[number];\n\nexport const L_LightTypes_List = ['volumeChangedLight', 'avarageLight', 'maxLight', 'avarageLong'];\nexport type T_LightTypes = typeof L_LightTypes_List[number];\n\nexport type T_Light = {\n\tid?: number;\n\tname: string;\n\tchannelID: number;\n\tlightType: T_LightTypes;\n\tshellyType: T_ShellyTypes;\n\tip: string;\n};\n\nexport class MySubClassedDexie extends Dexie {\n\t// 'lights' is added by dexie when declaring the stores()\n\t// We just tell the typing system this is the case\n\tlights!: Table<T_Light>;\n\n\tconstructor() {\n\t\tsuper('myDatabase');\n\t\tthis.version(1).stores({\n\t\t\tlights: `++id, name, channelID, lightType, shellyType, ip`, // Primary key and indexed props\n\t\t});\n\t}\n}\n\nexport const db = new MySubClassedDexie();\n","import axios from 'axios';\nimport isReachable from 'is-reachable';\nimport { isIPv4 } from 'net';\nimport { T_Light } from '../db';\n\nexport const isValidIp = (value: string) =>\n\t/^(?:(?:^|\\.)(?:2(?:5[0-5]|[0-4]\\d)|1?\\d?\\d)){4}$/.test(value) ? true : false;\n\nexport const getShelly1Available = async (light: T_Light): Promise<boolean> => {\n\tif (!isIPv4(light.ip)) {\n\t\talert(`IP (${light.ip}) from Light [${light.name}] is not a valid IPv4 adress`);\n\t\treturn false;\n\t}\n\tconst reachable = await isReachable(light.ip);\n\tif (!reachable) {\n\t\talert(`IP (${light.ip}) from Light [${light.name}] is not a reachable`);\n\t\treturn false;\n\t}\n\treturn true;\n};\n\nexport const getShelly1StatusOnOff = async (light: T_Light): Promise<boolean> => {\n\tconst isShelly1Available = await getShelly1Available(light);\n\tif (!isShelly1Available) return false;\n\treturn true;\n};\n\nexport const switchShelly = (light: T_Light, turn: 'on' | 'off', timeout?: number): void => {\n\tconst _timoutString = timeout && timeout !== 0 ? `&timer=${(timeout / 1000).toString()}` : '';\n\ttry {\n\t\taxios\n\t\t\t// .get(`http://${light.ip}/relay/${light.channelID.toString()}?turn=${turn}${_timoutString}`)\n\t\t\t.get(`http://${light.ip}/relay/${light.channelID.toString()}?turn=${turn}`)\n\t\t\t.then(function (response) {\n\t\t\t\t// no response because of the http error\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\t// there is an error because of not https - but it is working\n\t\t\t})\n\t\t\t.then(function () {\n\t\t\t\t// always executed\n\t\t\t});\n\t} catch (error) {\n\t\t// there is an error because of not https - but it is working\n\t}\n};\n","import React, { FC, useEffect, useRef, useState } from 'react';\nimport { Box, Heading } from 'grommet';\nimport { RadialSelected } from 'grommet-icons';\nimport { db, L_LightTypes_List, T_LightTypes } from '../../db';\nimport { useLiveQuery } from 'dexie-react-hooks';\nimport { switchShelly } from '../../lighthandler/shelly1Handler';\n\nexport interface I_VisualController_Props {\n\tanalyser: AnalyserNode | null;\n\trunning: boolean;\n}\n\nconst config: Record<string, any> = {\n\tvolumeChangedLight: {\n\t\ttimeout: 0, // timeout wait to switch off --> 0 no switch off\n\t\twaitTime: 500, // wait till next change in ms\n\t\tthreshold: 0, // threshold if 0 no threshold\n\t},\n\tavarageLight: {\n\t\ttimeout: 500,\n\t\twaitTime: 500,\n\t\tthreshold: 1.2,\n\t},\n\tmaxLight: {\n\t\ttimeout: 500,\n\t\twaitTime: 500,\n\t\tthreshold: 1.8,\n\t},\n\tavarageLong: {\n\t\ttimeout: 5000,\n\t\twaitTime: 5000,\n\t\tthreshold: 1.6,\n\t},\n};\n\nconst lightStates: Record<T_LightTypes, boolean> = {};\nconst lightTypeStatus: Record<T_LightTypes, boolean> = L_LightTypes_List.reduce(\n\t(a, v) => ({ ...a, [v]: false }),\n\t{} as Record<T_LightTypes, boolean>,\n);\n\n// const lightTypeStatus: Record<T_LightTypes, boolean> = {\n// \tvolumeChangedLight: false,\n// \tavarageLight: false,\n// \tmaxLight: false,\n// \tavarageLong: false,\n// };\n\nconst lastUpdates: Record<T_LightTypes, number> = L_LightTypes_List.reduce(\n\t(a, v) => ({ ...a, [v]: Date.now() }),\n\t{} as Record<T_LightTypes, number>,\n);\n\n// const lastUpdates: Record<T_LightTypes, number> = {\n// \tvolumeChangedLight: Date.now(),\n// \tavarageLight: Date.now(),\n// \tmaxLight: Date.now(),\n// \tavarageLong: Date.now(),\n// };\n\nconst timeouts: Record<T_LightTypes, any> = L_LightTypes_List.reduce(\n\t(a, v) => ({ ...a, [v]: null }),\n\t{} as Record<T_LightTypes, any>,\n);\n\n// const timeouts: Record<T_LightTypes, any> = {\n// \tvolumeChangedLight: null,\n// \tavarageLight: null,\n// \tmaxLight: null,\n// \tavarageLong: null,\n// };\n\nconst avarageLightTotalArray: number[] = [];\nconst avarageLongLightTotalArray: number[] = [];\n\nconst VisualController: FC<I_VisualController_Props> = ({ analyser, running }: I_VisualController_Props) => {\n\tconst canvasRefBar = useRef<any>();\n\tconst [canvasCtxBar, setCanvasCtxBar] = useState<any>(null);\n\tconst [drawVisualBar, setDrawVisualBar] = useState<number>(0);\n\n\tconst canvasRefTotal = useRef<any>();\n\tconst [canvasCtxTotal, setCanvasCtxTotal] = useState<any>(null);\n\tconst [drawVisualTotal, setDrawVisualTotal] = useState<number>(0);\n\n\t// to force render\n\tconst [, updateState] = React.useState();\n\tconst forceUpdate = React.useCallback(() => updateState({} as any), []);\n\n\tconst lights = useLiveQuery(() => db.lights.toArray());\n\n\tuseEffect(() => {\n\t\tsetCanvasCtxBar(canvasRefBar.current.getContext('2d'));\n\t\tsetCanvasCtxTotal(canvasRefTotal.current.getContext('2d'));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconsole.log('useEffect');\n\t\tif (lights) {\n\t\t\tfor (const lightConf of lights) {\n\t\t\t\tlightStates[lightConf.name] = false;\n\t\t\t\t// switch off real shelly\n\t\t\t\tswitchShelly(lightConf, 'off');\n\t\t\t}\n\t\t}\n\t}, [lights]);\n\n\tconst switchLight = (lightType: T_LightTypes, on: boolean) => {\n\t\tconst _now = Date.now();\n\t\tif (_now - lastUpdates[lightType] >= config[lightType].waitTime && lightTypeStatus[lightType] !== on) {\n\t\t\tclearTimeout(timeouts[lightType]);\n\t\t\tlastUpdates[lightType] = _now;\n\n\t\t\tlightTypeStatus[lightType] = on;\n\n\t\t\tif (lights) {\n\t\t\t\tfor (const lightConf of lights) {\n\t\t\t\t\tif (lightConf.lightType === lightType) {\n\t\t\t\t\t\tlightStates[lightConf.name] = on;\n\t\t\t\t\t\t// switch real shelly\n\t\t\t\t\t\tswitchShelly(lightConf, on ? 'on' : 'off');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (config[lightType].timeout !== 0) {\n\t\t\t\ttimeouts[lightType] = setTimeout(() => {\n\t\t\t\t\tlightTypeStatus[lightType] = false;\n\t\t\t\t\tif (lights) {\n\t\t\t\t\t\tfor (const lightConf of lights) {\n\t\t\t\t\t\t\tif (lightConf.lightType === lightType) {\n\t\t\t\t\t\t\t\tlightStates[lightConf.name] = false;\n\t\t\t\t\t\t\t\tswitchShelly(lightConf, on ? 'off' : 'on');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, config[lightType].timeout);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst visiualizeTotal = (bufferLength: number, dataArray: Uint8Array) => {\n\t\tconst WIDTH = canvasRefTotal.current.width;\n\t\tconst HEIGHT = canvasRefTotal.current.height;\n\n\t\tif (!running || !analyser) return;\n\n\t\tcanvasCtxTotal.clearRect(0, 0, WIDTH, HEIGHT);\n\n\t\tlet firstTime = true;\n\n\t\tconst draw = () => {\n\t\t\tif (!running || !analyser) return;\n\t\t\tanalyser.getByteFrequencyData(dataArray);\n\t\t\tconst setDrawVisual_ = requestAnimationFrame(draw);\n\t\t\tsetDrawVisualTotal(setDrawVisual_);\n\t\t\tcanvasCtxTotal.fillStyle = 'rgb(51, 51, 51)';\n\t\t\tcanvasCtxTotal.fillRect(0, 0, WIDTH, HEIGHT);\n\t\t\t// const barWidth = (WIDTH / bufferLength) * 2.5;\n\t\t\tconst barWidth = WIDTH / 10;\n\n\t\t\t// total avarage (volumeChanged)\n\t\t\tconst _totalAv =\n\t\t\t\tavarageLightTotalArray.reduce((accumulator, curr) => accumulator + curr, 0) /\n\t\t\t\tavarageLightTotalArray.length;\n\t\t\tconst _last50totalAv = avarageLightTotalArray.slice(avarageLightTotalArray.length < -64 ? -1 : -6);\n\t\t\tconst _last50totalAv_av =\n\t\t\t\t_last50totalAv.reduce((accumulator, curr) => accumulator + curr, 0) / _last50totalAv.length;\n\t\t\tcanvasCtxTotal.fillStyle = 'rgb(' + (_totalAv + 100) + ',200,200)';\n\t\t\tcanvasCtxTotal.fillRect(\n\t\t\t\t((WIDTH + 6) / 5 - barWidth / 2) * 1,\n\t\t\t\tHEIGHT - _totalAv / 2,\n\t\t\t\tbarWidth,\n\t\t\t\t_totalAv / 2,\n\t\t\t);\n\n\t\t\t// volume getting up\n\t\t\tif (_totalAv < _last50totalAv_av) {\n\t\t\t\tswitchLight('volumeChangedLight', true);\n\t\t\t}\n\t\t\t// volume getting down\n\t\t\tif (_totalAv > _last50totalAv_av) {\n\t\t\t\tswitchLight('volumeChangedLight', false);\n\t\t\t}\n\n\t\t\t//avarage * 3 (avarage)\n\t\t\tconst _last500totalAv = avarageLightTotalArray.slice(avarageLightTotalArray.length < -30 ? -1 : -30);\n\t\t\tconst _last500totalAv_av =\n\t\t\t\t_last500totalAv.reduce((accumulator, curr) => accumulator + curr, 0) / _last500totalAv.length;\n\t\t\tconst _avX3 = (dataArray.reduce((accumulator, curr) => accumulator + curr, 0) / bufferLength) * 3;\n\t\t\tcanvasCtxTotal.fillStyle = 'rgb(' + (_avX3 + 100) + ',200,200)';\n\t\t\tcanvasCtxTotal.fillRect(((WIDTH + 6) / 5 - barWidth / 2) * 2, HEIGHT - _avX3 / 2, barWidth, _avX3 / 2);\n\t\t\tif (_avX3 > _last500totalAv_av * config['avarageLight'].threshold) {\n\t\t\t\tswitchLight('avarageLight', true);\n\t\t\t}\n\t\t\tavarageLightTotalArray.push(_avX3);\n\n\t\t\t// max (max)\n\t\t\tconst _max = dataArray.reduce((accumulator, curr) => (accumulator < curr ? curr : accumulator), 0);\n\t\t\tcanvasCtxTotal.fillStyle = 'rgb(' + (_max + 100) + ',200,200)';\n\t\t\tcanvasCtxTotal.fillRect(((WIDTH + 6) / 5 - barWidth / 2) * 3, HEIGHT - _max / 2, barWidth, _max / 2);\n\t\t\tif (_max > _last500totalAv_av * config['maxLight'].threshold) {\n\t\t\t\tswitchLight('maxLight', true);\n\t\t\t}\n\n\t\t\t//avarage without 0 (avarageLong)\n\t\t\tconst _last50Without0Av = avarageLongLightTotalArray.slice(\n\t\t\t\tavarageLongLightTotalArray.length < -100 ? -1 : -100,\n\t\t\t);\n\t\t\tconst _last50Without0Av_av =\n\t\t\t\t_last50Without0Av.reduce((accumulator, curr) => accumulator + curr, 0) / _last50Without0Av.length;\n\t\t\tconst _countAVWithout0 = dataArray.filter((e) => e !== 0).length;\n\t\t\tconst _avWithout0 = dataArray.reduce((accumulator, curr) => accumulator + curr, 0) / _countAVWithout0;\n\t\t\tcanvasCtxTotal.fillStyle = 'rgb(' + (_avWithout0 + 100) + ',200,200)';\n\t\t\tcanvasCtxTotal.fillRect(\n\t\t\t\t((WIDTH + 6) / 5 - barWidth / 2) * 4,\n\t\t\t\tHEIGHT - _avWithout0 / 2,\n\t\t\t\tbarWidth,\n\t\t\t\t_avWithout0 / 2,\n\t\t\t);\n\t\t\tif (_avWithout0 > _last50Without0Av_av * config['avarageLong'].threshold) {\n\t\t\t\tswitchLight('avarageLong', true);\n\t\t\t}\n\t\t\tavarageLongLightTotalArray.push(_avWithout0);\n\n\t\t\tif (firstTime) console.log(dataArray);\n\t\t\tfirstTime = false;\n\t\t};\n\t\tdraw();\n\t};\n\n\tconst visualizeBar = (bufferLength: number, dataArray: Uint8Array) => {\n\t\tconst WIDTH = canvasRefBar.current.width;\n\t\tconst HEIGHT = canvasRefBar.current.height;\n\n\t\tif (!running || !analyser) return;\n\n\t\tconsole.log(bufferLength);\n\n\t\tcanvasCtxBar.clearRect(0, 0, WIDTH, HEIGHT);\n\n\t\t//reference this using self\n\t\tconst draw = () => {\n\t\t\tif (!running || !analyser) return;\n\t\t\tconst setDrawVisual_ = requestAnimationFrame(draw);\n\t\t\tsetDrawVisualBar(setDrawVisual_);\n\t\t\tanalyser.getByteFrequencyData(dataArray);\n\t\t\tcanvasCtxBar.fillStyle = 'rgb(51, 51, 51)';\n\t\t\tcanvasCtxBar.fillRect(0, 0, WIDTH, HEIGHT);\n\t\t\t// const barWidth = (WIDTH / bufferLength) * 2.5;\n\t\t\tconst barWidth = WIDTH / (bufferLength + 0.7);\n\t\t\tlet barHeight;\n\t\t\tlet x = 0;\n\t\t\tfor (let i = 0; i < bufferLength; i++) {\n\t\t\t\tbarHeight = dataArray[i];\n\t\t\t\tcanvasCtxBar.fillStyle = 'rgb(' + (barHeight + 100) + ',50,50)';\n\t\t\t\tcanvasCtxBar.fillRect(x, HEIGHT - barHeight / 2, barWidth, barHeight / 2);\n\t\t\t\tx += barWidth + 1;\n\t\t\t}\n\t\t};\n\n\t\tdraw();\n\t};\n\n\tconst stop = () => {\n\t\tif (canvasCtxBar) {\n\t\t\twindow.cancelAnimationFrame(drawVisualBar);\n\t\t\tconst WIDTH = canvasRefBar.current.width;\n\t\t\tconst HEIGHT = canvasRefBar.current.height;\n\t\t\tcanvasCtxBar.clearRect(0, 0, WIDTH, HEIGHT);\n\t\t}\n\t\tif (canvasCtxTotal) {\n\t\t\twindow.cancelAnimationFrame(drawVisualTotal);\n\t\t\tconst WIDTH1 = canvasRefTotal.current.width;\n\t\t\tconst HEIGHT1 = canvasRefTotal.current.height;\n\t\t\tcanvasCtxTotal.clearRect(0, 0, WIDTH1, HEIGHT1);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (running && analyser) {\n\t\t\tObject.keys(lightStates).forEach((key) => {\n\t\t\t\tlightStates[key] = false;\n\t\t\t});\n\t\t\tconst bufferLength = analyser.frequencyBinCount;\n\t\t\tconst dataArray = new Uint8Array(bufferLength);\n\t\t\tvisualizeBar(bufferLength, dataArray);\n\t\t\tvisiualizeTotal(bufferLength, dataArray);\n\t\t} else {\n\t\t\tstop();\n\t\t}\n\t}, [running]);\n\n\tconst switchLightState = (lightName: string, lightCurrentState: boolean) => {\n\t\tif (running) {\n\t\t\tconsole.log('only if animation is off');\n\t\t\treturn;\n\t\t}\n\n\t\tlightStates[lightName] = !lightCurrentState;\n\t\tconsole.log(lightStates, lightName, !lightCurrentState);\n\t\tforceUpdate();\n\t\tconst _light = lights?.find((e) => e.name == lightName);\n\t\tif (_light) switchShelly(_light, !lightCurrentState ? 'on' : 'off');\n\t};\n\n\treturn (\n\t\t<Box alignSelf=\"center\" pad=\"small\" justify=\"center\" gap=\"medium\">\n\t\t\t<Box direction=\"row\" gap=\"small\" justify=\"center\">\n\t\t\t\t<Box\n\t\t\t\t\tpad=\"xsmall\"\n\t\t\t\t\talignSelf=\"center\"\n\t\t\t\t\tborder={{ color: 'dark-2', size: 'medium' }}\n\t\t\t\t\tround=\"medium\"\n\t\t\t\t\t// elevation=\"small\"\n\t\t\t\t>\n\t\t\t\t\t<Box alignSelf=\"center\">Bar</Box>\n\t\t\t\t\t<canvas width=\"300\" height=\"100\" ref={canvasRefBar}></canvas>\n\t\t\t\t\t<Box direction=\"row\" justify=\"around\" margin=\"small\">\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<RadialSelected color=\"brand\" size=\"small\" opacity=\"0\" />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t<Box\n\t\t\t\t\tpad=\"xsmall\"\n\t\t\t\t\talignSelf=\"center\"\n\t\t\t\t\tborder={{ color: 'dark-2', size: 'medium' }}\n\t\t\t\t\tround=\"medium\"\n\t\t\t\t\t// elevation=\"small\"\n\t\t\t\t>\n\t\t\t\t\t<Box alignSelf=\"center\">Total</Box>\n\t\t\t\t\t<canvas width=\"50\" height=\"100\" ref={canvasRefTotal}></canvas>\n\t\t\t\t\t<Box direction=\"row\" justify=\"around\" margin=\"small\">\n\t\t\t\t\t\t{Object.entries(lightTypeStatus).map(([key, value]) => (\n\t\t\t\t\t\t\t<Box key={'lightTypeStatus_' + key}>\n\t\t\t\t\t\t\t\t<RadialSelected color={value ? 'status-warning' : 'status-disabled'} size=\"small\" />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t{lights && (\n\t\t\t\t<Box pad=\"xsmall\" alignSelf=\"center\">\n\t\t\t\t\t<Box direction=\"row\" justify=\"around\" margin=\"small\">\n\t\t\t\t\t\t{Object.entries(lights).map(([key, value]) => (\n\t\t\t\t\t\t\t<Box key={`lights-${key}`} pad=\"small\" margin=\"small\" align=\"center\" gap=\"small\">\n\t\t\t\t\t\t\t\t<Heading level=\"5\" margin=\"none\">\n\t\t\t\t\t\t\t\t\t{(value as any).name}\n\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t<RadialSelected\n\t\t\t\t\t\t\t\t\tcolor={lightStates[(value as any).name] ? 'status-warning' : 'status-disabled'}\n\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\tswitchLightState((value as any).name, lightStates[(value as any).name])\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t</Box>\n\t);\n};\n\nexport default VisualController;\n","import { Box, Button } from 'grommet';\nimport React, { FC, useEffect, useState } from 'react';\nimport VisualController from './VisualController';\n\nconst Controller: FC<any> = () => {\n\tconst [audioCtx, setAudioCtx] = useState<AudioContext | null>(null);\n\tconst [audioInput, setAudioInput] = useState<MediaStreamAudioSourceNode | null>(null);\n\tconst [analyser, setAnalyser] = useState<AnalyserNode | null>(null);\n\tconst [running, setRunning] = useState<boolean>(false);\n\tconst [stream, setStream] = useState<MediaStream | null>(null);\n\n\tuseEffect(() => {\n\t\t// Some browsers partially implement mediaDevices. We can't just assign an object\n\t\t// with getUserMedia as it would overwrite existing properties.\n\t\t// Here, we will just add the getUserMedia property if it's missing.\n\t\tif (navigator.mediaDevices.getUserMedia === undefined) {\n\t\t\tnavigator.mediaDevices.getUserMedia = function (constraints) {\n\t\t\t\t// First get ahold of the legacy getUserMedia, if present\n\t\t\t\tconst getUserMedia =\n\t\t\t\t\t(navigator as any).webkitGetUserMedia ||\n\t\t\t\t\t(navigator as any).mozGetUserMedia ||\n\t\t\t\t\t(navigator as any).msGetUserMedia;\n\n\t\t\t\t// Some browsers just don't implement it - return a rejected promise with an error\n\t\t\t\t// to keep a consistent interface\n\t\t\t\tif (!getUserMedia) {\n\t\t\t\t\treturn Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\tgetUserMedia.call(navigator, constraints, resolve, reject);\n\t\t\t\t});\n\t\t\t};\n\t\t}\n\n\t\t// (navigator as any).getUserMedia =\n\t\t// \t(navigator as any).getUserMedia ||\n\t\t// \t(navigator as any).webkitGetUserMedia ||\n\t\t// \t(navigator as any).mozGetUserMedia;\n\n\t\tconst _audioCtx: AudioContext = new window.AudioContext() || (window as any).webkitAudioContext;\n\t\tsetAudioCtx(_audioCtx);\n\t}, []);\n\n\tconst setupMic = async () => {\n\t\tif (audioCtx === null) return;\n\t\ttry {\n\t\t\tconst analyser_ = audioCtx.createAnalyser();\n\t\t\tanalyser_.minDecibels = -90;\n\t\t\tanalyser_.maxDecibels = -10;\n\t\t\tanalyser_.smoothingTimeConstant = 0.85;\n\t\t\t// analyser_.fftSize = 256;\n\t\t\tanalyser_.fftSize = 64;\n\t\t\tsetAnalyser(analyser_);\n\n\t\t\tconst distortion = audioCtx.createWaveShaper();\n\t\t\tconst gainNode = audioCtx.createGain();\n\t\t\tconst biquadFilter = audioCtx.createBiquadFilter();\n\t\t\tconst convolver = audioCtx.createConvolver();\n\n\t\t\tlet stream_: MediaStream;\n\t\t\t(window as any).stream = stream_ = await navigator.mediaDevices.getUserMedia({ audio: true, video: false });\n\t\t\tconst audioInput_ = audioCtx.createMediaStreamSource(stream_);\n\t\t\tsetStream(stream_);\n\n\t\t\taudioInput_.connect(distortion);\n\t\t\tdistortion.connect(biquadFilter);\n\t\t\tbiquadFilter.connect(gainNode);\n\t\t\tconvolver.connect(gainNode);\n\t\t\tgainNode.connect(analyser_);\n\n\t\t\tsetAudioInput(audioInput_);\n\n\t\t\t// distortion.oversample = '2x';\n\t\t\tbiquadFilter.gain.setTargetAtTime(0, audioCtx.currentTime, 0);\n\t\t\tbiquadFilter.disconnect(0);\n\t\t\tbiquadFilter.connect(gainNode);\n\n\t\t\tbiquadFilter.type = 'lowshelf';\n\t\t\tbiquadFilter.frequency.setTargetAtTime(1000, audioCtx.currentTime, 0);\n\t\t\t// biquadFilter.gain.setTargetAtTime(25, audioCtx.currentTime, 0);\n\n\t\t\tsetRunning(true);\n\t\t} catch (err) {\n\t\t\t//TODO: error getting stream\n\t\t\tconsole.log('Error: Issue getting mic', err);\n\t\t}\n\t};\n\n\tconst start = async () => {\n\t\tawait setupMic();\n\t};\n\n\tconst closeMic = () => {\n\t\tsetRunning(false);\n\t\tif (analyser) {\n\t\t\tanalyser.disconnect(0);\n\t\t\tsetAnalyser(null);\n\t\t}\n\t\tif (audioInput) {\n\t\t\taudioInput.disconnect(0);\n\t\t\tsetAudioInput(null);\n\t\t}\n\t\tif (stream) {\n\t\t\tstream.getAudioTracks().forEach((track: any) => {\n\t\t\t\ttrack.stop();\n\t\t\t});\n\t\t\tsetStream(null);\n\t\t}\n\t};\n\n\tconst stop = () => {\n\t\tcloseMic();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Box direction=\"row\" justify=\"center\" gap=\"medium\" margin=\"small\">\n\t\t\t\t{!running ? <Button onClick={start} label=\"Start\" /> : <Button onClick={stop} label=\"Stop\" />}\n\t\t\t</Box>\n\n\t\t\t<VisualController running={running} analyser={analyser} />\n\t\t</>\n\t);\n};\n\nexport default Controller;\n","import React, { FC, useEffect, useState } from 'react';\nimport { Box, Button, Heading, Select, TextInput } from 'grommet';\nimport { db, L_LightTypes_List, L_ShellyTypes_List, T_Light, T_LightTypes, T_ShellyTypes } from '../db';\nimport { Add, Save } from 'grommet-icons';\nimport { isValidIp } from '../lighthandler/shelly1Handler';\n\nexport interface I_NewEditLight_Props {\n\tmethod: 'new' | 'edit';\n\ttoEditLight?: T_Light;\n\tonClose: any;\n}\n\nconst NewEditLight: FC<I_NewEditLight_Props> = ({ method, toEditLight, onClose }: I_NewEditLight_Props) => {\n\tconst [lightName, setLightName] = useState<string>('');\n\tconst [lightIP, setLightIP] = useState<string>('');\n\tconst [shellyType, setShellyType] = useState<T_ShellyTypes | null>(null);\n\tconst [lightType, setlightType] = useState<T_LightTypes | null>(null);\n\tconst [channelID, setChannelID] = useState<number>(0);\n\tconst [title, setTitle] = useState<string>('Add new Light');\n\n\tuseEffect(() => {\n\t\tif (method === 'edit' && toEditLight) {\n\t\t\tsetLightName(toEditLight.name);\n\t\t\tsetChannelID(toEditLight.channelID);\n\t\t\tsetLightIP(toEditLight.ip);\n\t\t\tsetShellyType(toEditLight.shellyType);\n\t\t\tsetlightType(toEditLight.lightType);\n\t\t\tsetTitle('Edit Light');\n\t\t}\n\t}, []);\n\n\tconst saveAdd = async () => {\n\t\tif (lightName !== '' && isValidIp(lightIP) && shellyType !== null && lightType !== null) {\n\t\t\tif (method === 'new') {\n\t\t\t\ttry {\n\t\t\t\t\t// add to db\n\t\t\t\t\tconst id = await db.lights.add({\n\t\t\t\t\t\tname: lightName,\n\t\t\t\t\t\tchannelID: channelID,\n\t\t\t\t\t\tlightType: lightType,\n\t\t\t\t\t\tshellyType: shellyType,\n\t\t\t\t\t\tip: lightIP,\n\t\t\t\t\t});\n\t\t\t\t\tconsole.log('ID = ' + id);\n\t\t\t\t\t// reset\n\t\t\t\t\tsetLightName('');\n\t\t\t\t\tsetLightIP('');\n\t\t\t\t\tsetChannelID(0);\n\t\t\t\t\tsetShellyType(null);\n\t\t\t\t\tsetlightType(null);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.log(`Failed to add ${name}: ${error}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (toEditLight && toEditLight.id)\n\t\t\t\t\tdb.lights.put(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: toEditLight.id,\n\t\t\t\t\t\t\tname: lightName,\n\t\t\t\t\t\t\tchannelID: channelID,\n\t\t\t\t\t\t\tlightType: lightType,\n\t\t\t\t\t\t\tshellyType: shellyType,\n\t\t\t\t\t\t\tip: lightIP,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttoEditLight.id,\n\t\t\t\t\t);\n\t\t\t\tonClose();\n\t\t\t}\n\t\t} else {\n\t\t\talert('Everything is mandatory, or somthing is wrong like the IP');\n\t\t}\n\t};\n\n\treturn (\n\t\t<Box border={{ color: 'dark-3', size: 'small' }} round=\"xsmall\">\n\t\t\t<Heading level=\"3\" margin=\"xsmall\" alignSelf=\"center\">\n\t\t\t\t{title}\n\t\t\t</Heading>\n\t\t\t<Box border={[{ color: 'dark-3', size: 'small', side: 'bottom' }]} />\n\t\t\t<Box margin=\"medium\" direction=\"row\" gap=\"small\" align=\"center\" wrap>\n\t\t\t\t<Box>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tplaceholder=\"Light Name...\"\n\t\t\t\t\t\tvalue={lightName}\n\t\t\t\t\t\tplain\n\t\t\t\t\t\tonChange={(event) => setLightName(event.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t{shellyType && shellyType === 'shelly2.5' && (\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tplaceholder=\"select ChannelID\"\n\t\t\t\t\t\t\tvalue={channelID.toString() ?? ''}\n\t\t\t\t\t\t\toptions={['0', '1']}\n\t\t\t\t\t\t\tonChange={({ option }) => setChannelID(parseInt(option))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Box>\n\t\t\t\t<Box>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tplaceholder=\"Light IP...\"\n\t\t\t\t\t\tvalue={lightIP}\n\t\t\t\t\t\tplain\n\t\t\t\t\t\tonChange={(event) => setLightIP(event.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t\t<Select\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tplaceholder=\"select Shelly Type...\"\n\t\t\t\t\tvalue={shellyType ?? ''}\n\t\t\t\t\toptions={L_ShellyTypes_List}\n\t\t\t\t\tonChange={({ option }) => setShellyType(option)}\n\t\t\t\t/>\n\t\t\t\t<Select\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tplaceholder=\"select Light Type...\"\n\t\t\t\t\tvalue={lightType ?? ''}\n\t\t\t\t\toptions={L_LightTypes_List}\n\t\t\t\t\tonChange={({ option }) => setlightType(option)}\n\t\t\t\t/>\n\n\t\t\t\t<Box round=\"full\" overflow=\"hidden\" background=\"status-ok\" alignSelf=\"center\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ticon={method === 'new' ? <Add size=\"small\" /> : <Save size=\"small\" />}\n\t\t\t\t\t\tonClick={() => saveAdd()}\n\t\t\t\t\t\thoverIndicator\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default NewEditLight;\n","import React, { FC } from 'react';\nimport { Box, TextInput } from 'grommet';\nimport { T_Light } from '../db';\nimport { Edit, Trash } from 'grommet-icons';\n\nexport interface I_LigthListElement_Props {\n\tlight: T_Light;\n\tonEditLight: any;\n\tonRemoveLight: any;\n}\n\nconst LigthListElement: FC<I_LigthListElement_Props> = ({\n\tlight,\n\tonEditLight,\n\tonRemoveLight,\n}: I_LigthListElement_Props) => {\n\treturn (\n\t\t<Box margin=\"medium\" direction=\"row\" gap=\"small\" justify=\"around\" align=\"center\">\n\t\t\t<Box>\n\t\t\t\t<TextInput size=\"small\" value={light.name} plain />\n\t\t\t</Box>\n\t\t\t<Box>\n\t\t\t\t<TextInput size=\"small\" value={light.ip} plain />\n\t\t\t</Box>\n\t\t\t<Box direction=\"row\" gap=\"small\" margin={{ right: 'small' }}>\n\t\t\t\t<Edit color=\"status-warning\" size=\"medium\" onClick={() => onEditLight(light)} />\n\t\t\t\t<Trash color=\"status-error\" size=\"medium\" onClick={() => onRemoveLight(light)} />\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default LigthListElement;\n","import React, { FC } from 'react';\nimport { Box, Heading } from 'grommet';\nimport LigthListElement from './LightListElement';\nimport { T_Light } from '../db';\n\nexport interface I_LightList_Props {\n\tlights: T_Light[];\n\tonEditLight: any;\n\tonRemoveLight: any;\n}\n\nconst LightList: FC<I_LightList_Props> = ({ lights, onEditLight, onRemoveLight }: I_LightList_Props) => {\n\treturn (\n\t\t<Box border={{ color: 'dark-3', size: 'small' }} round=\"xsmall\">\n\t\t\t<Heading level=\"3\" margin=\"xsmall\" alignSelf=\"center\">\n\t\t\t\tExisting Lights\n\t\t\t</Heading>\n\t\t\t<Box border={[{ color: 'dark-3', size: 'small', side: 'bottom' }]} />\n\t\t\t{lights.map((light) => (\n\t\t\t\t<LigthListElement\n\t\t\t\t\tkey={`hallo_${light.name}`}\n\t\t\t\t\tlight={light}\n\t\t\t\t\tonEditLight={onEditLight}\n\t\t\t\t\tonRemoveLight={onRemoveLight}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</Box>\n\t);\n};\n\nexport default LightList;\n","import React, { FC, useState } from 'react';\nimport { Box, Button, Header, Heading, Main } from 'grommet';\nimport { db, T_Light } from '../db';\nimport NewEditLight from './NewEditLight';\nimport LightList from './LightList';\nimport { useLiveQuery } from 'dexie-react-hooks';\n\nexport interface I_Configuration_Props {\n\tsetClose: any;\n}\n\nconst Configuration: FC<I_Configuration_Props> = ({ setClose }: I_Configuration_Props) => {\n\tconst [isEdit, setIsEdit] = useState<boolean>(false);\n\tconst [selectedLight, setSelectedLight] = useState<T_Light | null>(null);\n\tconst lights = useLiveQuery(() => db.lights.toArray());\n\n\tconst onClose = () => {\n\t\tsetIsEdit(false);\n\t};\n\n\tconst onEditLight = (light: T_Light) => {\n\t\tsetIsEdit(true);\n\t\tsetSelectedLight(light);\n\t};\n\n\tconst onRemoveLight = (light: T_Light) => {\n\t\tconsole.log(light);\n\t\tif (light.id) db.lights.delete(light.id);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Box\n\t\t\t\tjustify=\"center\"\n\t\t\t\talignSelf=\"center\"\n\t\t\t\tmargin=\"small\"\n\t\t\t\tborder={{ color: 'dark-3', size: 'small' }}\n\t\t\t\tround=\"medium\"\n\t\t\t\tbackground=\"dark-1\"\n\t\t\t>\n\t\t\t\t<Header\n\t\t\t\t\tjustify=\"between\"\n\t\t\t\t\tmargin={{ horizontal: 'small' }}\n\t\t\t\t\theight=\"xxsmall\"\n\t\t\t\t\tround={{ corner: 'top', size: 'medium' }}\n\t\t\t\t>\n\t\t\t\t\t<Heading level=\"2\" margin=\"none\">\n\t\t\t\t\t\tConfig\n\t\t\t\t\t</Heading>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<Button size=\"small\" label=\"Close\" onClick={() => setClose()} />\n\t\t\t\t\t</Box>\n\t\t\t\t</Header>\n\t\t\t\t<Box border={[{ color: 'dark-3', size: 'small', side: 'bottom' }]} />\n\t\t\t\t<Main alignSelf=\"center\">\n\t\t\t\t\t{!isEdit && (\n\t\t\t\t\t\t<Box pad=\"small\" justify=\"center\" gap=\"large\">\n\t\t\t\t\t\t\t<NewEditLight method=\"new\" onClose={onClose} />\n\t\t\t\t\t\t\t{lights && (\n\t\t\t\t\t\t\t\t<LightList lights={lights} onEditLight={onEditLight} onRemoveLight={onRemoveLight} />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t\t{isEdit && selectedLight && (\n\t\t\t\t\t\t<Box pad=\"small\" justify=\"center\" gap=\"large\">\n\t\t\t\t\t\t\t<NewEditLight method=\"edit\" toEditLight={selectedLight} onClose={onClose} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t)}\n\t\t\t\t</Main>\n\t\t\t</Box>\n\t\t\t<button\n\t\t\t\tclassName=\"large-button\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdb.transaction('rw', db.tables, async () => {\n\t\t\t\t\t\tawait Promise.all(db.tables.map((table) => table.clear()));\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tClear Database\n\t\t\t</button>\n\t\t</>\n\t);\n};\n\nexport default Configuration;\n","import { Box, Button, grommet, Grommet, Header, Heading, Layer, Main } from 'grommet';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Controller from './controllers/controller';\nimport Configuration from './configuration/config';\n\nconst App = (): JSX.Element => {\n\tconst [showConfig, setShowConfig] = useState<boolean>(false);\n\n\treturn (\n\t\t<>\n\t\t\t<Grommet theme={grommet} background=\"dark-1\">\n\t\t\t\t{!showConfig && (\n\t\t\t\t\t<Box\n\t\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\t\talignSelf=\"center\"\n\t\t\t\t\t\tmargin=\"small\"\n\t\t\t\t\t\tborder={{ color: 'dark-3', size: 'small' }}\n\t\t\t\t\t\tround=\"medium\"\n\t\t\t\t\t\tbackground=\"dark-1\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\theight=\"xxsmall\"\n\t\t\t\t\t\t\tround={{ corner: 'top', size: 'large' }}\n\t\t\t\t\t\t\tjustify=\"between\"\n\t\t\t\t\t\t\tmargin={{ horizontal: 'small' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Heading level=\"3\" margin=\"none\">\n\t\t\t\t\t\t\t\tLightshow with Shellys V0.0.17\n\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t\t<Button size=\"small\" label=\"Settings\" onClick={() => setShowConfig(true)} />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Box border={[{ color: 'dark-3', size: 'small', side: 'bottom' }]} />\n\t\t\t\t\t\t<Main alignSelf=\"center\" pad=\"small\" justify=\"center\">\n\t\t\t\t\t\t\t<Controller />\n\t\t\t\t\t\t</Main>\n\t\t\t\t\t</Box>\n\t\t\t\t)}\n\t\t\t\t{showConfig && (\n\t\t\t\t\t<Configuration\n\t\t\t\t\t\tsetClose={() => {\n\t\t\t\t\t\t\tsetShowConfig(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Grommet>\n\t\t</>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}